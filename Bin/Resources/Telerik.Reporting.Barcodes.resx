<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BillDataCreditorDescr" xml:space="preserve">
    <value>Gets the value representing the "Creditor/Payable To" data structure.</value>
  </data>
  <data name="BillDataDebtorDescr" xml:space="preserve">
    <value>Gets the value representing the "Debtor/Payable By" data structure.</value>
  </data>
  <data name="BillDataPaymentAdditionalInfoDescr" xml:space="preserve">
    <value>Gets or sets the additional information about the payment.</value>
  </data>
  <data name="BillDataPaymentAlternativeProcedure1Descr" xml:space="preserve">
    <value>Gets or sets the information for alternative procedure 1.</value>
  </data>
  <data name="BillDataPaymentAlternativeProcedure2Descr" xml:space="preserve">
    <value>Gets or sets the information for alternative procedure 2.</value>
  </data>
  <data name="BillDataPaymentAmountDescr" xml:space="preserve">
    <value>Gets or sets the bill amount.</value>
  </data>
  <data name="BillDataPaymentCurrencyDescr" xml:space="preserve">
    <value>Gets or sets the currency used in the bill. Supported values: CHF/EUR. Default value: CHF.</value>
  </data>
  <data name="BillDataPaymentReferenceDescr" xml:space="preserve">
    <value>Gets or sets the payment reference number. It can be null when reference type is set to NON.</value>
  </data>
  <data name="BillDataPaymentReferenceTypeDescr" xml:space="preserve">
    <value>Gets or sets the type of the payment reference number. Supported values: QRR/SCOR/NON. Default value: NON.</value>
  </data>
  <data name="BillDataPaymentStructuredBillInfoDescr" xml:space="preserve">
    <value>Gets or sets the coded information for automated booking of the payment.</value>
  </data>
  <data name="BillDataPaymentDescr" xml:space="preserve">
    <value>Gets the value representing the "Payment Information" data structure.</value>
  </data>
  <data name="BillDataPersonAddressDescr" xml:space="preserve">
    <value>Gets or sets the address information for the creditor/debtor.</value>
  </data>
  <data name="BillDataPersonNameDescr" xml:space="preserve">
    <value>Gets or sets the creditor/debtor name.</value>
  </data>
  <data name="BillDataDescr" xml:space="preserve">
    <value>Gets the class representing the data fields mandatory to create a barcode used in a Swiss QR Bill.</value>
  </data>
  <data name="QuietZoneDescr" xml:space="preserve">
    <value>Gets or sets a value indicating the size of the "quiet zone" around the barcode.</value>
  </data>
  <data name="ValidateBillDataDescr" xml:space="preserve">
    <value>Gets or sets a value indicating whether the BillData fields will be validated, or not.</value>
  </data>
  <data name="ValueFromBillDataDescr" xml:space="preserve">
    <value>Gets or sets a value indicating whether the barcode value will be generated from the BillData fields, or not.</value>
  </data>
  <data name="BillDataCityDescr" xml:space="preserve">
    <value>Gets or sets the city name.</value>
  </data>
  <data name="BillDataCityDisplayName" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="BillDataCountryDescr" xml:space="preserve">
    <value>Gets or sets the country name.</value>
  </data>
  <data name="BillDataCountryDisplayName" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="BillDataCreditorDisplayName" xml:space="preserve">
    <value>Creditor</value>
  </data>
  <data name="BillDataDebtorDisplayName" xml:space="preserve">
    <value>Debtor</value>
  </data>
  <data name="BillDataDisplayName" xml:space="preserve">
    <value>BillData</value>
  </data>
  <data name="BillDataHouseNumberDescr" xml:space="preserve">
    <value>Gets or sets the house number for structured address or address line 2 for combined address.</value>
  </data>
  <data name="BillDataHouseNumberDisplayName" xml:space="preserve">
    <value>HouseNumber</value>
  </data>
  <data name="BillDataIBANDescr" xml:space="preserve">
    <value>Gets or sets the IBAN of the account that the bill is payable to.</value>
  </data>
  <data name="BillDataIBANDisplayName" xml:space="preserve">
    <value>IBAN</value>
  </data>
  <data name="BillDataIBANTypeDescr" xml:space="preserve">
    <value>Gets or sets the type of the IBAN of the account that the bill is payable to. Supported values: IBAN/QRIBAN. Default value: IBAN.</value>
  </data>
  <data name="BillDataIBANTypeDisplayName" xml:space="preserve">
    <value>IBANType</value>
  </data>
  <data name="BillDataPaymentAdditionalInfoDisplayName" xml:space="preserve">
    <value>AdditionalInfo</value>
  </data>
  <data name="BillDataPaymentAlternativeProcedure1DisplayName" xml:space="preserve">
    <value>AlternativeProcedure1</value>
  </data>
  <data name="BillDataPaymentAlternativeProcedure2DisplayName" xml:space="preserve">
    <value>AlternativeProcedure2</value>
  </data>
  <data name="BillDataPaymentAmountDisplayName" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="BillDataPaymentCurrencyDisplayName" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="BillDataPaymentDisplayName" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="BillDataPaymentReferenceDisplayName" xml:space="preserve">
    <value>Reference</value>
  </data>
  <data name="BillDataPaymentReferenceTypeDisplayName" xml:space="preserve">
    <value>ReferenceType</value>
  </data>
  <data name="BillDataPaymentStructuredBillInfoDisplayName" xml:space="preserve">
    <value>StructuredBillInfo</value>
  </data>
  <data name="BillDataPersonAddressDisplayName" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="BillDataPersonNameDisplayName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="BillDataPostalCodeDescr" xml:space="preserve">
    <value>Gets or sets the postal code.</value>
  </data>
  <data name="BillDataPostalCodeDisplayName" xml:space="preserve">
    <value>PostalCode</value>
  </data>
  <data name="BillDataStreetDescr" xml:space="preserve">
    <value>Gets or sets the street name for structured address or address line 1 for combined address.</value>
  </data>
  <data name="BillDataStreetDisplayName" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="Encoder1DShowTextDescr" xml:space="preserve">
    <value>Specifies whether the barcode should display the text together with the bars.</value>
  </data>
  <data name="Encoder1DShowTextDisplayName" xml:space="preserve">
    <value>ShowText</value>
  </data>
  <data name="Pdf417EncoderColumnsDescr" xml:space="preserve">
    <value>Gets or sets the number of columns.</value>
  </data>
  <data name="Pdf417EncoderColumnsDisplayName" xml:space="preserve">
    <value>Columns</value>
  </data>
  <data name="Pdf417EncoderECLDescr" xml:space="preserve">
    <value>Gets or sets the error correction level.</value>
  </data>
  <data name="Pdf417EncoderECLDisplayName" xml:space="preserve">
    <value>ErrorCorrectionLevel</value>
  </data>
  <data name="Pdf417EncoderEncodingDescr" xml:space="preserve">
    <value>Gets or sets the encoding mode.</value>
  </data>
  <data name="Pdf417EncoderEncodingDisplayName" xml:space="preserve">
    <value>Encoding</value>
  </data>
  <data name="Pdf417EncoderRowsDescr" xml:space="preserve">
    <value>Gets or sets the number of rows.</value>
  </data>
  <data name="Pdf417EncoderRowsDisplayName" xml:space="preserve">
    <value>Rows</value>
  </data>
  <data name="QRCodeEncoderApplicationIndicatorDescr" xml:space="preserve">
    <value>Gets or sets the application indicator.</value>
  </data>
  <data name="QRCodeEncoderApplicationIndicatorDisplayName" xml:space="preserve">
    <value>ApplicationIndicator</value>
  </data>
  <data name="QRCodeEncoderECIDescr" xml:space="preserve">
    <value>Gets or sets the Extended Channel Interpretation (ECI) mode.</value>
  </data>
  <data name="QRCodeEncoderECIDisplayName" xml:space="preserve">
    <value>ECI</value>
  </data>
  <data name="QRCodeEncoderECLDescr" xml:space="preserve">
    <value>Gets or sets the error correction level.</value>
  </data>
  <data name="QRCodeEncoderECLDisplayName" xml:space="preserve">
    <value>ErrorCorrectionLevel</value>
  </data>
  <data name="QRCodeEncoderFNC1Descr" xml:space="preserve">
    <value>Gets or sets the FNC1 mode.</value>
  </data>
  <data name="QRCodeEncoderFNC1DisplayName" xml:space="preserve">
    <value>FNC1</value>
  </data>
  <data name="QRCodeEncoderModeDescr" xml:space="preserve">
    <value>Determines the sets of acceptable symbols: numbers, characters, etc.</value>
  </data>
  <data name="QRCodeEncoderModeDisplayName" xml:space="preserve">
    <value>Mode</value>
  </data>
  <data name="QRCodeEncoderVersionDescr" xml:space="preserve">
    <value>Gets or sets the QR code version.</value>
  </data>
  <data name="QRCodeEncoderVersionDisplayName" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="QuietZoneDisplayName" xml:space="preserve">
    <value>QuietZone</value>
  </data>
  <data name="ValidateBillDataDisplayName" xml:space="preserve">
    <value>ValidateBillData</value>
  </data>
  <data name="ValueFromBillDataDisplayName" xml:space="preserve">
    <value>ValueFromBillData</value>
  </data>
</root>